initSidebarItems({"enum":[["DistanceUnit","A unit of measure for distance. "],["Orientation","This parameter defines one of two coordinate system rules (Right-hand or Left-hand) each of which can be specified in a few different ways. - Right-hand rule: right, ccw, counterclockwise, - Left-hand rule: left, cw, clockwise. The default orientation (counterclockwise) complies with the OGC standard which defines outer ring vertices in counterclockwise order with inner ring(s) vertices (holes) in clockwise order."],["Strategy","The strategy defines the approach for how to represent shapes at indexing and search time. "],["Tree","Name of the `PrefixTree` implementation to be used. "]],"struct":[["DefaultGeoPointMapping","Default mapping for `geo_point`. "],["DefaultGeoShapeMapping","Default mapping for `geo_shape`. "],["Distance","A distance value paired with a unit of measure. "],["GeoPoint","An Elasticsearch `geo_point` type with a format."],["GeoPointArray","Geo-point expressed as an array with the format: `[lon, lat]` "],["GeoPointHash","Geo-point expressed as a geohash. "],["GeoPointObject","Geo-point expressed as an object, with `lat` and `lon` keys. "],["GeoPointString","Geo-point expressed as a string with the format: `\"lat,lon\"`. "],["GeoShape","Geo shape type with a given mapping."]],"trait":[["GeoPointFieldType","A field that will be mapped as a `geo_point`. "],["GeoPointFormat","A format used for parsing and formatting geo points. "],["GeoPointMapping","The base requirements for mapping a `geo_point` type."],["GeoShapeFieldType","A field that will be mapped as a `geo_shape`. "],["GeoShapeMapping","The base requirements for mapping a `geo_shape` type."]],"type":[["DefaultGeoPointFormat","The default `geo_point` format (`GeoPointArray`). "]]});